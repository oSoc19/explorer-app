// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.DAL;

namespace backend.Migrations
{
    [DbContext(typeof(PaintingContext))]
    [Migration("20190710133630_update-artist")]
    partial class updateartist
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("backend.Models.Artist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate");

                    b.Property<DateTime>("Deathdate");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Nationality");

                    b.HasKey("Id");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("backend.Models.ArtistTranslation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArtistId");

                    b.Property<string>("Description");

                    b.Property<long>("LanguageId");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("LanguageId");

                    b.ToTable("ArtistTranslation");
                });

            modelBuilder.Entity("backend.Models.Language", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("backend.Models.Movement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Movement");
                });

            modelBuilder.Entity("backend.Models.Painting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AuthorId");

                    b.Property<string>("Description");

                    b.Property<float>("Height");

                    b.Property<string>("ImageUrl");

                    b.Property<long>("MovementId");

                    b.Property<long>("TechniqueId");

                    b.Property<string>("Title");

                    b.Property<float>("Width");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("MovementId");

                    b.HasIndex("TechniqueId");

                    b.ToTable("Painting");
                });

            modelBuilder.Entity("backend.Models.PaintingAudio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AudioUrl");

                    b.Property<long>("LanguageId");

                    b.Property<string>("Name");

                    b.Property<long>("PaintingId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PaintingId");

                    b.ToTable("PaintingAudio");
                });

            modelBuilder.Entity("backend.Models.PaintingStory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl");

                    b.Property<long>("LanguageId");

                    b.Property<long>("PaintingId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PaintingId");

                    b.ToTable("PaintingStory");
                });

            modelBuilder.Entity("backend.Models.PaintingTranslation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<string>("FieldTranslated");

                    b.Property<long>("LanguageId");

                    b.Property<long>("PaintingId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PaintingId");

                    b.ToTable("PaintingTranslation");
                });

            modelBuilder.Entity("backend.Models.Technique", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Technique");
                });

            modelBuilder.Entity("backend.Models.ArtistTranslation", b =>
                {
                    b.HasOne("backend.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("backend.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("backend.Models.Painting", b =>
                {
                    b.HasOne("backend.Models.Artist", "Author")
                        .WithMany("paintings")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("backend.Models.Movement", "Movement")
                        .WithMany("Paintings")
                        .HasForeignKey("MovementId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("backend.Models.Technique", "Technique")
                        .WithMany()
                        .HasForeignKey("TechniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("backend.Models.PaintingAudio", b =>
                {
                    b.HasOne("backend.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("backend.Models.Painting", "Painting")
                        .WithMany("Audios")
                        .HasForeignKey("PaintingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("backend.Models.PaintingStory", b =>
                {
                    b.HasOne("backend.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("backend.Models.Painting", "Painting")
                        .WithMany("Stories")
                        .HasForeignKey("PaintingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("backend.Models.PaintingTranslation", b =>
                {
                    b.HasOne("backend.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("backend.Models.Painting", "Painting")
                        .WithMany()
                        .HasForeignKey("PaintingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
